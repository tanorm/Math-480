""" a) This code snippet uses Fermat's Little Theorem which says that if Mod(i,n)^(n-1) is not equivalent
to 1 the number n is composite."""

n = 4654252230393111226989449826741007006486078009450861095070222439898324342353927553909251532232407850265642079868425916328810273416481567992145162141358151
a = Mod(2,n)^(n-1)
print str(a)
1631275335353718272688521136992205307778996921510751912836784958121590177271097904110560032076219875741821572502979807785676850802289166219856576501165317

"""Since this value does not equal 1 we know that n is composite!"""

""" Using the hint that p and q are very close to each other I took the square root of n in order to find two 
possible factors that are the same. I rounded this number because it has to be an integer and called it p. 
I then checked for two factors close to each other by using a while loop that checked if n was divisible by
p. If p was divisible the while loop breaks if not p = p+1. When I found the correct p I found q by n/p. """

n = 4654252230393111226989449826741007006486078009450861095070222439898324342353927553909251532232407850265642079868425916328810273416481567992145162141358151
p = round(sqrt(n))
while p < n:
    if n % p == 0:
        break
    else:
        p += 1

q = n/p
print str(p)
print str(q)
print str(p*q)
print str(n)

68222080226222296181917368518534332259513625527062166102114730123514248558499
68222080226222296181917368518534332259513625527062166102114730123514248558349
4654252230393111226989449826741007006486078009450861095070222439898324342353927553909251532232407850265642079868425916328810273416481567992145162141358151
4654252230393111226989449826741007006486078009450861095070222439898324342353927553909251532232407850265642079868425916328810273416481567992145162141358151

""" As can be seen above p*q is equivalent to n and therefore are factors of n. """
