""" The following method finds the determinant of a 4x4 matrix and returns it. I used 
R = PolynomialRing(QQ,16,'x')
a = matrix(R,4,4,R.gens())
a.det()

to find the equation for the determinant of a 4x4 matrix. 

def det(x):
    x0 = x[0][0]
    x4 = x[0][1]
    x8 = x[0][2]
    x12 = x[0][3]
    x1 = x[1][0]
    x5 = x[1][1]
    x9 = x[1][2]
    x13 = x[1][3]
    x2 = x[2][0]
    x6 = x[2][1]
    x10 = x[2][2]
    x14 = x[2][3]
    x3 = x[3][0]
    x7 = x[3][1]
    x11 = x[3][2]
    x15 = x[3][3]
    
    return x3*x6*x9*x12 \
    - x2*x7*x9*x12 \
    - x3*x5*x10*x12 \
    + x1*x7*x10*x12 \
    + x2*x5*x11*x12 \
    - x1*x6*x11*x12 \
    - x3*x6*x8*x13 \
    + x2*x7*x8*x13 \
    + x3*x4*x10*x13 \
    - x0*x7*x10*x13 \
    - x2*x4*x11*x13 \
    + x0*x6*x11*x13 \
    + x3*x5*x8*x14 \
    - x1*x7*x8*x14 \
    - x3*x4*x9*x14 \
    + x0*x7*x9*x14 \
    + x1*x4*x11*x14 \
    - x0*x5*x11*x14 \
    - x2*x5*x8*x15 \
    + x1*x6*x8*x15 \
    + x2*x4*x9*x15 \
    - x0*x6*x9*x15 \
    - x1*x4*x10*x15 \
    + x0*x5*x10*x15
    
print det([[3,4,8,2],[4,4,5,1],[5,7,2,6],[4,4,9,6]])
timeit("det([[3,4,8,2],[4,4,5,1],[5,7,2,6],[4,4,9,6]])")

291
625 loops, best of 3: 34.9 µs per loop


""" For cython I once again attempted to assign the variables with cdef but kept getting syntax errors.
I will be asking you about this later because I'm probably missing something basic. Attempted:
cdef int x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 
Cython did increase the speed without assigning the variables with cdef """

%cython

def cdet(x):
    x0 = x[0][0]
    x4 = x[0][1]
    x8 = x[0][2]
    x12 = x[0][3]
    x1 = x[1][0]
    x5 = x[1][1]
    x9 = x[1][2]
    x13 = x[1][3]
    x2 = x[2][0]
    x6 = x[2][1]
    x10 = x[2][2]
    x14 = x[2][3]
    x3 = x[3][0]
    x7 = x[3][1]
    x11 = x[3][2]
    x15 = x[3][3]
    
    return x3*x6*x9*x12 \
    - x2*x7*x9*x12 \
    - x3*x5*x10*x12 \
    + x1*x7*x10*x12 \
    + x2*x5*x11*x12 \
    - x1*x6*x11*x12 \
    - x3*x6*x8*x13 \
    + x2*x7*x8*x13 \
    + x3*x4*x10*x13 \
    - x0*x7*x10*x13 \
    - x2*x4*x11*x13 \
    + x0*x6*x11*x13 \
    + x3*x5*x8*x14 \
    - x1*x7*x8*x14 \
    - x3*x4*x9*x14 \
    + x0*x7*x9*x14 \
    + x1*x4*x11*x14 \
    - x0*x5*x11*x14 \
    - x2*x5*x8*x15 \
    + x1*x6*x8*x15 \
    + x2*x4*x9*x15 \
    - x0*x6*x9*x15 \
    - x1*x4*x10*x15 \
    + x0*x5*x10*x15
    
print cdet([[3,4,8,2],[4,4,5,1],[5,7,2,6],[4,4,9,6]])
%timeit cdet([[3,4,8,2],[4,4,5,1],[5,7,2,6],[4,4,9,6]])

291
625 loops, best of 3: 6.8 µs per loop
